{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","reverse","sortBy","selectValue","sortGoods","setState","reverseGoods","reset","selectChange","event","value","target","sortArray","array","sort","good1","good2","localeCompare","length","this","visibleGoods","props","goods","filter","good","className","map","type","onClick","name","id","onChange","optionValue","indexOf","React","Component","goodsFromServer","App","isStarted","startingApp","ReactDOM","render","document","getElementById"],"mappings":"yQAaaA,EAAb,4MACEC,MAAQ,CACNC,SAAS,EACTC,OAAQ,GACRC,YAAa,GAJjB,EAOEC,UAAY,SAACF,GACX,EAAKG,SAAS,CACZH,YATN,EAaEI,aAAe,WACb,EAAKD,UAAS,SAAAL,GACZ,MAAQ,CACNC,SAAUD,EAAMC,aAhBxB,EAqBEM,MAAQ,WACN,EAAKF,SAAS,CACZJ,SAAS,EACTC,OAAQ,GACRC,YAAa,KAzBnB,EA6BEK,aAAe,SAACC,GACd,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKL,SAAS,CACZF,aAAcO,KAjCpB,EAqCEE,UAAY,SAACC,EAAiBX,GAC5BW,EAAMC,MAAK,SAACC,EAAOC,GACjB,MAAe,iBAAXd,EACKa,EAAME,cAAcD,GAGtBD,EAAMG,OAASF,EAAME,WA3ClC,4CA+CE,WAAU,IAAD,OACP,EAAyCC,KAAKnB,MAAtCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,YACnBiB,EAAeD,KAAKE,MAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKN,QAAUf,KAUpE,OARID,GACFiB,KAAKP,UAAUQ,EAAclB,GAG3BD,GACFmB,EAAanB,UAIb,qBAAKwB,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,oBACEA,UAAU,wDADZ,SASGL,EAAaF,OAAS,EAEnBE,EAAaM,KAAI,SAAAF,GAAI,OACnB,oBAAeC,UAAU,kBAAzB,SAA4CD,GAAnCA,MAGX,mBAAGC,UAAU,mBAAb,2CAGR,sBAAKA,UAAU,oCAAf,UACE,wBACEA,UAAU,iCAKVE,KAAK,SACLC,QAAS,kBAAM,EAAKxB,UAAU,iBAPhC,oCAWA,wBACEqB,UAAU,mCAKVE,KAAK,SACLC,QAAS,kBAAM,EAAKxB,UAAU,WAPhC,iCAWA,wBACEqB,UAAU,iCAKVE,KAAK,SACLC,QAAST,KAAKb,aAPhB,qBAWA,wBACEmB,UAAU,iCAKVE,KAAK,SACLC,QAAST,KAAKZ,MAPhB,mBAWA,wBACEsB,KAAK,SACLC,GAAG,SACHpB,MAAOP,EACP4B,SAAUZ,KAAKX,aACfiB,UAAU,WALZ,SAOGN,KAAKE,MAAMC,MAAMI,KAAI,SAAAF,GACpB,IAAMQ,EAAc,EAAKX,MAAMC,MAAMW,QAAQT,GAAQ,EAErD,OACE,iCAAgCQ,GAAhC,UAAgBA,qBAzIlC,GAA+BE,IAAMC,WCT/BC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAkDaC,E,4MA1CbrC,MAAe,CACbsC,WAAW,G,EAGbC,YAAc,WACZ,EAAKlC,SAAS,CACZiC,WAAW,K,4CAIf,WACE,IAAQA,EAAcnB,KAAKnB,MAAnBsC,UAER,OACE,qBAAKb,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBACEA,UAAU,2EADZ,SAQIa,EASA,cAAC,EAAD,CAAWhB,MAAOc,IARlB,wBACET,KAAK,SACLC,QAAST,KAAKoB,YACdd,UAAU,0BAHZ,6B,GA1BIS,IAAMC,WCjBxBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.625e365a.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: string[];\n}\n\ninterface State {\n  reverse: boolean;\n  sortBy: string;\n  selectValue: number;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state = {\n    reverse: false,\n    sortBy: '',\n    selectValue: 1,\n  };\n\n  sortGoods = (sortBy: string) => {\n    this.setState({\n      sortBy,\n    });\n  };\n\n  reverseGoods = () => {\n    this.setState(state => {\n      return ({\n        reverse: !state.reverse,\n      });\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      reverse: false,\n      sortBy: '',\n      selectValue: 1,\n    });\n  };\n\n  selectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      selectValue: +value,\n    });\n  };\n\n  sortArray = (array: string[], sortBy: string) => {\n    array.sort((good1, good2) => {\n      if (sortBy === 'alphabetical') {\n        return good1.localeCompare(good2);\n      }\n\n      return good1.length - good2.length;\n    });\n  };\n\n  render() {\n    const { reverse, sortBy, selectValue } = this.state;\n    const visibleGoods = this.props.goods.filter(good => good.length >= selectValue);\n\n    if (sortBy) {\n      this.sortArray(visibleGoods, sortBy);\n    }\n\n    if (reverse) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"GoodsList\">\n        <div className=\"container\">\n          <div className=\"row d-flex justify-content-center\">\n            <ul\n              className=\"\n                GoodsList__list\n                col\n                list-group\n                text-center\n                mb-3\n                mt-3\"\n            >\n              {visibleGoods.length > 0\n                ? (\n                  visibleGoods.map(good => (\n                    <li key={good} className=\"list-group-item\">{good}</li>\n                  ))\n                )\n                : <p className=\"GoodsList__error\">No goods for your request</p>}\n            </ul>\n          </div>\n          <div className=\"row d-flex justify-content-center\">\n            <button\n              className=\"\n                col-lg-2\n                me-2\n                btn\n                btn-primary\"\n              type=\"button\"\n              onClick={() => this.sortGoods('alphabetical')}\n            >\n              sort list alphabetical\n            </button>\n            <button\n              className=\"\n                col-lg-2\n                me-2\n                btn\n                btn-secondary\"\n              type=\"button\"\n              onClick={() => this.sortGoods('length')}\n            >\n              sort list by length\n            </button>\n            <button\n              className=\"\n                col-lg-2\n                me-2\n                btn\n                btn-success\"\n              type=\"button\"\n              onClick={this.reverseGoods}\n            >\n              reverse\n            </button>\n            <button\n              className=\"\n                col-lg-2\n                me-2\n                btn\n                btn-warning\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              reset\n            </button>\n            <select\n              name=\"select\"\n              id=\"select\"\n              value={selectValue}\n              onChange={this.selectChange}\n              className=\"col-lg-2\"\n            >\n              {this.props.goods.map(good => {\n                const optionValue = this.props.goods.indexOf(good) + 1;\n\n                return (\n                  <option key={`${optionValue}`}>{optionValue}</option>\n                );\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { GoodsList } from './components';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isStarted: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isStarted: false,\n  };\n\n  startingApp = () => {\n    this.setState({\n      isStarted: true,\n    });\n  };\n\n  render() {\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div\n            className=\"\n              GoodsList__wrapper\n              row\n              d-flex\n              justify-content-center\n              align-items-center\"\n          >\n            {!isStarted ? (\n              <button\n                type=\"button\"\n                onClick={this.startingApp}\n                className=\"btn btn-danger col-lg-3\"\n              >\n                Start\n              </button>\n            ) : (\n              <GoodsList goods={goodsFromServer} />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}